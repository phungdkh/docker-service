input {
    
    rabbitmq {
        type => "event"
        host => "rabbitmq"
        queue => "event_queue"
        exchange => "event_exchange"
        exchange_type => "direct"
        heartbeat => 30
        key => "event"
        durable => true
        user => "${RABBITMQ_USERNAME}"
        password => "${RABBITMQ_PASSWORD}"
    }
}

output {
      # Must use type to filter incoming, else 3 messages (event, command, analytic)
      # will be written to MongoDB. Reason is that Docker image config does not 
      # support running in multiple pipeline mode. It means that all defined 
      # output commands get a copy of incoming message regardless of what queue was source
      # of message.... Quite annoying :( 

      if [type] == "event" {
        # stdout { codec => rubydebug }

        elasticsearch {
            hosts => "elasticsearch:9200"
            index => "datahub-%{+YYYY.MM.dd}"
        }

        mongodb {
            collection => "event"
            database => "datahub"
            uri => "mongodb://mongodb:27017/datahub"        
            codec => "json"
        }

        if [routing][action] == "learnapp.crud.create.rating" and [routing][entity] == "coursepad.course.courseobject" {
            rabbitmq {
                id => "rabbit-rating_aggregation-id"
                key => "rating_aggregation"
                exchange => "processor_exchange"
                exchange_type => "direct"
                host => "rabbitmq"
                port => 5672
                durable => true
                persistent => true
                user => "${RABBITMQ_USERNAME}"
                password => "${RABBITMQ_PASSWORD}"
            }
        }

        if [routing][action] == "learnapp.user_navigation.complete.course" {
            rabbitmq {
                id => "rabbit-timeused_aggregation-id"
                key => "timeused_aggregation"
                exchange => "processor_exchange"
                exchange_type => "direct"
                host => "rabbitmq"
                port => 5672
                durable => true
                persistent => true
                user => "${RABBITMQ_USERNAME}"
                password => "${RABBITMQ_PASSWORD}"
            }
        }
    }
}
